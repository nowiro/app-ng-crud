# ===============
sudo systemctl restart systemd-timesyncd.service
sudo apt update
sudo apt upgrade
sudo apt autoremove
sudo docker container prune -f

# ===============

sudo snap install helm --classic

helm repo add stable https://kubernetes-charts.storage.googleapis.com

helm repo add nginx-stable https://helm.nginx.com/stable
helm repo update
# helm install localhost nginx-stable/nginx-ingress
kubectl create namespace ingress-namespace
# helm install stable/nginx-ingress --name my-release -f values.yaml
# helm upgrade 
helm install nginx nginx-stable/nginx-ingress \
helm install --name my-nginx stable/nginx-ingress
    --namespace ingress-basic \
    --set controller.replicaCount=2 \
    --set controller.nodeSelector."beta\.kubernetes\.io/os"=linux \
    --set defaultBackend.nodeSelector."beta\.kubernetes\.io/os"=linux \
    --set controller.publishService.enabled=true

# helm delete nginx


helm repo update
kubectl create namespace kubernetes-dashboard
helm install kubernetes-dashboard stable/kubernetes-dashboard --namespace kubernetes-dashboard 


  
helm repo add rancher-stable https://releases.rancher.com/server-charts/stable
helm repo update
kubectl create namespace cattle-system

helm install gitlab -f halm.gitlab.yaml stable/gitlab-ce





kubectl create -f ./namespace-dev.yaml
kubectl create -f ./namespace-prod.yaml
kubectl get namespaces

CURRENT_CONTEXT=$(kubectl config view -o jsonpath='{.current-context}')
USER_NAME=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'"${CURRENT_CONTEXT}"'")].context.user}')
CLUSTER_NAME=$(kubectl config view -o jsonpath='{.contexts[?(@.name == "'"${CURRENT_CONTEXT}"'")].context.cluster}')

kubectl config set-context dev --namespace=development --cluster=${CLUSTER_NAME} --user=${USER_NAME}
kubectl config set-context prod --namespace=production --cluster=${CLUSTER_NAME} --user=${USER_NAME}



kubectl config set-context kubernetes-dashboard --namespace=kubernetes-dashboard --cluster=${CLUSTER_NAME} --user=${USER_NAME}
kubectl create -f ./dns-dashboard.yaml